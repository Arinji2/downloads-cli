# .goreleaser.yml
version: 2

before:
  hooks:
    # Ensure our go.mod is tidy before building
    - go mod tidy

builds:
  - env:
      - CGO_ENABLED=0  # Keeping CGO disabled for better portability
    # binary name will match the project name
    binary: '{{ .ProjectName }}'
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
    ignore:
      - goos: darwin
    # Add mod timestamp for reproducible builds
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags:
      - -trimpath
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}}

archives:
  - format: tar.gz
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
    files:
      - src: "options.example.json"
        dst: "options.json"
        info:
          owner: root
          group: root
          mode: 0644
    format_overrides:
      - goos: windows
        format: zip
    # ensure files are created with correct permissions
    wrap_in_directory: true
    strip_parent_binary_folder: true

checksum:
  name_template: 'checksums.txt'
  algorithm: sha256

signs:
  - artifacts: checksum

snapshot:
  name_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^ci:'
  groups:
    - title: Installation Instructions
      regexp: ".*"
      notes:
        - |
          ### Linux/macOS
          ```bash
          tar xzf myproject_*_*.tar.gz
          chmod +x myproject
          ./myproject
          ```

          ### Windows
          1. Extract the zip file
          2. Run myproject.exe
